package com.ubcsolar.ui;

import javax.swing.JPanel;
import java.awt.BorderLayout;
import java.awt.Component;
import java.util.*;

import javax.swing.JSpinner;
import javax.swing.JSlider;
import javax.swing.SwingConstants;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.event.ChangeListener;
import javax.swing.text.DefaultFormatter;

import com.ubcsolar.common.GeoCoord;

import javax.swing.event.ChangeEvent;
import java.awt.event.InputMethodListener;
import java.awt.event.InputMethodEvent;
import java.awt.event.MouseWheelListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

public class SliderSpinnerFrame extends JPanel {
	/**
	 * 
	 */
	private static final long serialVersionUID = 7199207287395262736L;
	private JLabel topLabel; //the label at the top
	private JSlider slider = new JSlider(); //main slider
	private JSpinner spinner = new JSpinner();
	private boolean isManuallySet = false; //If the speed value is manually set instead of generated by the
	private final String showIsManuallySet = "(Y)";
	private final String showIsNotManuallySet = "(N)";
	

	//simulator, we should change color or something. 
	private int currentValue; 
	private List<GeoCoord> representedCoordinates;
	private final int lapNumber;
	
	public SliderSpinnerFrame(String labelAtTheTop, int initialValue, boolean isManuallySetInitialValue, List<GeoCoord> representingCoords, int lapNumber) {
		this.lapNumber = lapNumber;
		this.isManuallySet = isManuallySetInitialValue;
		currentValue = initialValue;
		this.representedCoordinates = representingCoords;
		JPanel panel = new JPanel();
		this.add(panel, BorderLayout.CENTER);
		panel.setLayout(new BorderLayout(0, 0));
		
		spinner = new JSpinner();
		spinner.setValue(initialValue);
		spinner.addChangeListener(new ChangeListener() {
			public void stateChanged(ChangeEvent arg0) {
				currentValue = (int) spinner.getValue();
				isManuallySet = true;
				updateSelectors();
			}
		});
		
		Component mySpinnerEditor = spinner.getEditor();
		JFormattedTextField jftf = ((JSpinner.DefaultEditor) mySpinnerEditor).getTextField();
		jftf.setColumns(3); //won't go faster than 999 km/h. 
		panel.add(spinner, BorderLayout.SOUTH);
		
		slider = new JSlider();
		slider.addChangeListener(new ChangeListener() {
			public void stateChanged(ChangeEvent evt) {
				  JSlider slider = (JSlider) evt.getSource();
			        if (slider.getValueIsAdjusting()) {
			        	currentValue = slider.getValue();
						isManuallySet = true;
						updateSelectors();
			        }
			}
		});
		slider.setMinorTickSpacing(25);
		slider.setMaximum(125);
		slider.setPaintTicks(true);
		slider.setPaintLabels(true);
		slider.setOrientation(SwingConstants.VERTICAL);
		slider.setValue(initialValue);
		panel.add(slider, BorderLayout.CENTER);
		
		topLabel = new JLabel("New label");
		topLabel.setHorizontalAlignment(SwingConstants.CENTER);
		if(this.isManuallySet){
			topLabel.setText(this.showIsManuallySet + labelAtTheTop);
			//might make it bold here too.
		}
		else{
			topLabel.setText(this.showIsNotManuallySet + labelAtTheTop);
		}
		topLabel.setText(labelAtTheTop);
		panel.add(topLabel, BorderLayout.NORTH);
		updateSelectors();
		if(currentValue < 1){
			System.out.println("Slider pane initial value: " + initialValue);
		}
	}

	public int getValue(){
		return currentValue; 
	}
	
	public void setValue(int newValue){
		this.currentValue = newValue;
		this.updateSelectors();
	}

	private void updateSelectors() {
		this.slider.setValue(this.currentValue);
		this.spinner.setValue(this.currentValue);	
		String showManuallySet;
		if(this.isManuallySet){
			showManuallySet = this.showIsManuallySet; //might make it bold here too. 
		}else{
			showManuallySet = this.showIsNotManuallySet;
		}
		if(topLabel != null){
			String currentLabelMinusFlag = topLabel.getText().substring(this.showIsManuallySet.length())+"{" + this.lapNumber + "}";
			this.topLabel.setText(showManuallySet + currentLabelMinusFlag);
		}
	}

	public List<GeoCoord> getRepresentedCoordinates() {
		return representedCoordinates;
	}

	public boolean isManuallySet() {
		return isManuallySet;
	}
	
	public void changeManuallySet(Boolean newValue) {
		isManuallySet = newValue;
	}

	public int getLapNumber() {
		return this.lapNumber;
	}

}
